{
  "kind": "Request",
  "method": "GET",
  "path": "/repos/rust-lang/rust/issues",
  "query": "labels=A-coherence&filter=all&sort=created&direction=asc&per_page=100",
  "request_body": "",
  "response_code": 200,
  "response_body": [
    {
      "active_lock_reason": null,
      "assignee": {
        "avatar_url": "https://avatars.githubusercontent.com/u/16256974?v=4",
        "events_url": "https://api.github.com/users/atsuzaki/events{/privacy}",
        "followers_url": "https://api.github.com/users/atsuzaki/followers",
        "following_url": "https://api.github.com/users/atsuzaki/following{/other_user}",
        "gists_url": "https://api.github.com/users/atsuzaki/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/atsuzaki",
        "id": 16256974,
        "login": "atsuzaki",
        "node_id": "MDQ6VXNlcjE2MjU2OTc0",
        "organizations_url": "https://api.github.com/users/atsuzaki/orgs",
        "received_events_url": "https://api.github.com/users/atsuzaki/received_events",
        "repos_url": "https://api.github.com/users/atsuzaki/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/atsuzaki/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/atsuzaki/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/atsuzaki"
      },
      "assignees": [
        {
          "avatar_url": "https://avatars.githubusercontent.com/u/16256974?v=4",
          "events_url": "https://api.github.com/users/atsuzaki/events{/privacy}",
          "followers_url": "https://api.github.com/users/atsuzaki/followers",
          "following_url": "https://api.github.com/users/atsuzaki/following{/other_user}",
          "gists_url": "https://api.github.com/users/atsuzaki/gists{/gist_id}",
          "gravatar_id": "",
          "html_url": "https://github.com/atsuzaki",
          "id": 16256974,
          "login": "atsuzaki",
          "node_id": "MDQ6VXNlcjE2MjU2OTc0",
          "organizations_url": "https://api.github.com/users/atsuzaki/orgs",
          "received_events_url": "https://api.github.com/users/atsuzaki/received_events",
          "repos_url": "https://api.github.com/users/atsuzaki/repos",
          "site_admin": false,
          "starred_url": "https://api.github.com/users/atsuzaki/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/atsuzaki/subscriptions",
          "type": "User",
          "url": "https://api.github.com/users/atsuzaki"
        }
      ],
      "author_association": "MEMBER",
      "body": "We consider projections to be foreign types during orphan check\n\nhttps://github.com/rust-lang/rust/blob/ceeb5ade201e4181c6d5df2ba96ae5fb2193aadc/compiler/rustc_trait_selection/src/traits/coherence.rs#L731\n\nbut do not consider them to be parameters when checking for uncovered types https://github.com/rust-lang/rust/blob/ceeb5ade201e4181c6d5df2ba96ae5fb2193aadc/compiler/rustc_trait_selection/src/traits/coherence.rs#L621\n\nThis is more obvious after #99552\n\nthis means that the following impl passes the orphan check even though it shouldn't\n```rust\n// crate a\npub trait Foreign<T, U> {\n    type Assoc;\n}\n\n// crate b\nuse a::Foreign;\n\ntrait Id {\n    type Assoc;\n}\n\nimpl<T> Id for T {\n    type Assoc = T;\n}\n\npub struct B;\nimpl<T> Foreign<B, T> for <T as Id>::Assoc {\n    type Assoc = usize;\n}\n```\nThe impl in `b` overlaps with an impl `impl<U> Foreign<T, LocalTy> for LocalTy` in another crate `c` which passes the orphan check.\n\nWhile I wasn't able to cause runtime UB with this, I was able to get an ICE during `codegen_fulfill_obligation`: https://github.com/lcnr/orphan-check-ub\n\ncc @rust-lang/types \n\n<!-- TRIAGEBOT_START -->\n\n<!-- TRIAGEBOT_ASSIGN_START -->\n\n<!-- TRIAGEBOT_ASSIGN_DATA_START$${\"user\":\"atsuzaki\"}$$TRIAGEBOT_ASSIGN_DATA_END -->\n\n<!-- TRIAGEBOT_ASSIGN_END -->\n<!-- TRIAGEBOT_END -->",
      "closed_at": null,
      "comments": 5,
      "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/99554/comments",
      "created_at": "2022-07-21T10:56:00Z",
      "events_url": "https://api.github.com/repos/rust-lang/rust/issues/99554/events",
      "html_url": "https://github.com/rust-lang/rust/issues/99554",
      "id": 1313070635,
      "labels": [
        {
          "color": "f7e101",
          "default": false,
          "description": "Area: Trait system",
          "id": 13836860,
          "name": "A-traits",
          "node_id": "MDU6TGFiZWwxMzgzNjg2MA==",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits"
        },
        {
          "color": "02E10C",
          "default": false,
          "description": "Call for participation: This issue has a mentor. Use RustcContributor::new on Zulip for discussion.",
          "id": 67766349,
          "name": "E-mentor",
          "node_id": "MDU6TGFiZWw2Nzc2NjM0OQ==",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/E-mentor"
        },
        {
          "color": "f7e101",
          "default": false,
          "description": "Area: Associated items such as associated types and consts.",
          "id": 149689562,
          "name": "A-associated-items",
          "node_id": "MDU6TGFiZWwxNDk2ODk1NjI=",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/A-associated-items"
        },
        {
          "color": "eb6420",
          "default": false,
          "description": "High priority",
          "id": 203429200,
          "name": "P-high",
          "node_id": "MDU6TGFiZWwyMDM0MjkyMDA=",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/P-high"
        },
        {
          "color": "e11d21",
          "default": false,
          "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness",
          "id": 267612997,
          "name": "I-unsound",
          "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound"
        },
        {
          "color": "02e10c",
          "default": false,
          "description": "Call for participation: Experience needed to fix: Medium / intermediate",
          "id": 419557634,
          "name": "E-medium",
          "node_id": "MDU6TGFiZWw0MTk1NTc2MzQ=",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/E-medium"
        },
        {
          "color": "f5f1fd",
          "default": false,
          "description": "Category: This is a bug.",
          "id": 650731663,
          "name": "C-bug",
          "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug"
        },
        {
          "color": "bfd4f2",
          "default": false,
          "description": "Relevant to the types team, which will review and decide on the PR/issue.",
          "id": 4172483496,
          "name": "T-types",
          "node_id": "LA_kwDOAAsO6M74swuo",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types"
        },
        {
          "color": "f7e101",
          "default": false,
          "description": "Area: Coherence",
          "id": 4917350639,
          "name": "A-coherence",
          "node_id": "LA_kwDOAAsO6M8AAAABJRjQ7w",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/A-coherence"
        }
      ],
      "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/99554/labels{/name}",
      "locked": false,
      "milestone": null,
      "node_id": "I_kwDOAAsO6M5OQ94r",
      "number": 99554,
      "performed_via_github_app": null,
      "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/rust-lang/rust/issues/99554/reactions"
      },
      "repository_url": "https://api.github.com/repos/rust-lang/rust",
      "state": "open",
      "state_reason": null,
      "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/99554/timeline",
      "title": "orphan check incorrectly handles projections",
      "updated_at": "2023-01-27T17:08:45Z",
      "url": "https://api.github.com/repos/rust-lang/rust/issues/99554",
      "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4",
        "events_url": "https://api.github.com/users/lcnr/events{/privacy}",
        "followers_url": "https://api.github.com/users/lcnr/followers",
        "following_url": "https://api.github.com/users/lcnr/following{/other_user}",
        "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lcnr",
        "id": 29864074,
        "login": "lcnr",
        "node_id": "MDQ6VXNlcjI5ODY0MDc0",
        "organizations_url": "https://api.github.com/users/lcnr/orgs",
        "received_events_url": "https://api.github.com/users/lcnr/received_events",
        "repos_url": "https://api.github.com/users/lcnr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lcnr"
      }
    },
    {
      "active_lock_reason": null,
      "assignee": null,
      "assignees": [],
      "author_association": "MEMBER",
      "body": "which is unsound during coherence, as coherence requires completeness\r\n```rust\r\n#![feature(specialization)]\r\n\r\ntrait Default {\r\n   type Id;\r\n}\r\n\r\nimpl<T> Default for T {\r\n   default type Id = T;\r\n}\r\n\r\ntrait Overlap {\r\n   type Assoc;\r\n}\r\n\r\nimpl Overlap for u32 {\r\n   type Assoc = usize;\r\n}\r\n\r\nimpl Overlap for <u32 as Default>::Id {\r\n   type Assoc = Box<usize>;\r\n}\r\n```\r\n\r\nhttps://github.com/rust-lang/rust/blob/03770f0e2b60c02db8fcf52fed5fb36aac70cedc/compiler/rustc_trait_selection/src/traits/project.rs#L1526",
      "closed_at": null,
      "comments": 0,
      "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105782/comments",
      "created_at": "2022-12-16T15:11:15Z",
      "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105782/events",
      "html_url": "https://github.com/rust-lang/rust/issues/105782",
      "id": 1500394507,
      "labels": [
        {
          "color": "f7e101",
          "default": false,
          "description": "Area: Trait system",
          "id": 13836860,
          "name": "A-traits",
          "node_id": "MDU6TGFiZWwxMzgzNjg2MA==",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits"
        },
        {
          "color": "e11d21",
          "default": false,
          "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness",
          "id": 267612997,
          "name": "I-unsound",
          "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound"
        },
        {
          "color": "f7e101",
          "default": false,
          "description": "Area: Trait impl specialization",
          "id": 347795552,
          "name": "A-specialization",
          "node_id": "MDU6TGFiZWwzNDc3OTU1NTI=",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/A-specialization"
        },
        {
          "color": "f5f1fd",
          "default": false,
          "description": "Category: This is a bug.",
          "id": 650731663,
          "name": "C-bug",
          "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug"
        },
        {
          "color": "76dcde",
          "default": false,
          "description": "This issue requires a nightly compiler in some way.",
          "id": 1472563007,
          "name": "requires-nightly",
          "node_id": "MDU6TGFiZWwxNDcyNTYzMDA3",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/requires-nightly"
        },
        {
          "color": "f9c0cc",
          "default": false,
          "description": "`#![feature(specialization)]`",
          "id": 1472579062,
          "name": "F-specialization",
          "node_id": "MDU6TGFiZWwxNDcyNTc5MDYy",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/F-specialization"
        },
        {
          "color": "f7e101",
          "default": false,
          "description": "Area: Coherence",
          "id": 4917350639,
          "name": "A-coherence",
          "node_id": "LA_kwDOAAsO6M8AAAABJRjQ7w",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/A-coherence"
        }
      ],
      "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105782/labels{/name}",
      "locked": false,
      "milestone": null,
      "node_id": "I_kwDOAAsO6M5ZbjQL",
      "number": 105782,
      "performed_via_github_app": null,
      "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/rust-lang/rust/issues/105782/reactions"
      },
      "repository_url": "https://api.github.com/repos/rust-lang/rust",
      "state": "open",
      "state_reason": null,
      "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105782/timeline",
      "title": "specialization: default items completely drop candidates instead of ambiguity",
      "updated_at": "2022-12-16T16:17:41Z",
      "url": "https://api.github.com/repos/rust-lang/rust/issues/105782",
      "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4",
        "events_url": "https://api.github.com/users/lcnr/events{/privacy}",
        "followers_url": "https://api.github.com/users/lcnr/followers",
        "following_url": "https://api.github.com/users/lcnr/following{/other_user}",
        "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lcnr",
        "id": 29864074,
        "login": "lcnr",
        "node_id": "MDQ6VXNlcjI5ODY0MDc0",
        "organizations_url": "https://api.github.com/users/lcnr/orgs",
        "received_events_url": "https://api.github.com/users/lcnr/received_events",
        "repos_url": "https://api.github.com/users/lcnr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lcnr"
      }
    },
    {
      "active_lock_reason": null,
      "assignee": null,
      "assignees": [],
      "author_association": "MEMBER",
      "body": "```rust\r\n// Using the higher ranked projection hack to prevent us from replacing the projection\r\n// with an inference variable.\r\ntrait ToUnit<'a> {\r\n    type Unit;\r\n}\r\n\r\nstruct LocalTy;\r\nimpl<'a> ToUnit<'a> for *const LocalTy {\r\n    type Unit = ();\r\n}\r\n\r\nimpl<'a, T: Copy + ?Sized> ToUnit<'a> for *const T {\r\n    type Unit = ();\r\n}\r\n\r\ntrait Overlap<T> {\r\n    type Assoc;\r\n}\r\n\r\ntype Assoc<'a, T> = <*const T as ToUnit<'a>>::Unit;\r\n\r\nimpl<T> Overlap<T> for T {\r\n    type Assoc = usize;\r\n}\r\n\r\nimpl<T> Overlap<for<'a> fn(&'a (), Assoc<'a, T>)> for T\r\nwhere\r\n    for<'a> *const T: ToUnit<'a>,\r\n{\r\n    type Assoc = Box<usize>;\r\n}\r\n\r\nfn foo<T: Overlap<U>, U>(x: T::Assoc) -> T::Assoc {\r\n    x\r\n}\r\n\r\nfn main() {\r\n    foo::<for<'a> fn(&'a (), ()), for<'a> fn(&'a (), ())>(3usize);\r\n}\r\n```\r\n\r\n`for<'a> fn(&'a (), ())>: Overlap<for<'a> fn(&'a (), ())>>` can be satisfied using both impls, ignoring a deficiency of the current normalization routine which means that right now the second impl pretty much never applies.\r\n\r\nCurrently inference constraints from equating the self type are not used to normalize the trait argument so we fail when equating `()` with `Assoc<'a, for<'a> fn(&'a (), ())>` even those these two are the same type. This will change once deferred projection equality is implemented.\r\n\r\n## why this currently passes coherence\r\n\r\nCoherence does a pairwise check for all relevant impls. It starts by instantiating the impl parameters with inference vars and equating the impl headers. When we do that with `Overlap<T> for T` and `Overlap<for<'a> fn(&'a (), Assoc<'a, T>)> for T` we have:\r\n\r\n- `eq(?0: Overflap<?0>, ?1: Overlap<for<'a> fn(&'a (), <*const ?1 as ToUnit<'a>>::Unit)>)`\r\n    - `eq(?0, ?1)` constrains `?1` to be equal to `?0`\r\n    - `eq(?0, for<'a> fn(&'a (), <*const ?0 as ToUnit<'a>>::Unit)>)`: this now fails the occurs check\r\n\r\nThe occurs check is necessary to prevent ourselves from creating infinitely large types, e.g. `?0 = Vec<?0>`. But it does mean that coherence considers these two impls to be disjoint. Because the inference var only occurs inside of a projection, there's a way to equate these two types without resulting in an infinitely large type by normalizing the projection.",
      "closed_at": null,
      "comments": 1,
      "comments_url": "https://api.github.com/repos/rust-lang/rust/issues/105787/comments",
      "created_at": "2022-12-16T16:16:11Z",
      "events_url": "https://api.github.com/repos/rust-lang/rust/issues/105787/events",
      "html_url": "https://github.com/rust-lang/rust/issues/105787",
      "id": 1500501670,
      "labels": [
        {
          "color": "f7e101",
          "default": false,
          "description": "Area: Trait system",
          "id": 13836860,
          "name": "A-traits",
          "node_id": "MDU6TGFiZWwxMzgzNjg2MA==",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/A-traits"
        },
        {
          "color": "eb6420",
          "default": false,
          "description": "Medium priority",
          "id": 60344715,
          "name": "P-medium",
          "node_id": "MDU6TGFiZWw2MDM0NDcxNQ==",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/P-medium"
        },
        {
          "color": "e11d21",
          "default": false,
          "description": "Issue: A soundness hole (worst kind of bug), see: https://en.wikipedia.org/wiki/Soundness",
          "id": 267612997,
          "name": "I-unsound",
          "node_id": "MDU6TGFiZWwyNjc2MTI5OTc=",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/I-unsound"
        },
        {
          "color": "f5f1fd",
          "default": false,
          "description": "Category: This is a bug.",
          "id": 650731663,
          "name": "C-bug",
          "node_id": "MDU6TGFiZWw2NTA3MzE2NjM=",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/C-bug"
        },
        {
          "color": "bfd4f2",
          "default": false,
          "description": "Relevant to the types team, which will review and decide on the PR/issue.",
          "id": 4172483496,
          "name": "T-types",
          "node_id": "LA_kwDOAAsO6M74swuo",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/T-types"
        },
        {
          "color": "f7e101",
          "default": false,
          "description": "Area: Coherence",
          "id": 4917350639,
          "name": "A-coherence",
          "node_id": "LA_kwDOAAsO6M8AAAABJRjQ7w",
          "url": "https://api.github.com/repos/rust-lang/rust/labels/A-coherence"
        }
      ],
      "labels_url": "https://api.github.com/repos/rust-lang/rust/issues/105787/labels{/name}",
      "locked": false,
      "milestone": null,
      "node_id": "I_kwDOAAsO6M5Zb9am",
      "number": 105787,
      "performed_via_github_app": null,
      "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/rust-lang/rust/issues/105787/reactions"
      },
      "repository_url": "https://api.github.com/repos/rust-lang/rust",
      "state": "open",
      "state_reason": null,
      "timeline_url": "https://api.github.com/repos/rust-lang/rust/issues/105787/timeline",
      "title": "occurs check with projections results in error, not ambiguity",
      "updated_at": "2022-12-17T05:07:04Z",
      "url": "https://api.github.com/repos/rust-lang/rust/issues/105787",
      "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4",
        "events_url": "https://api.github.com/users/lcnr/events{/privacy}",
        "followers_url": "https://api.github.com/users/lcnr/followers",
        "following_url": "https://api.github.com/users/lcnr/following{/other_user}",
        "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lcnr",
        "id": 29864074,
        "login": "lcnr",
        "node_id": "MDQ6VXNlcjI5ODY0MDc0",
        "organizations_url": "https://api.github.com/users/lcnr/orgs",
        "received_events_url": "https://api.github.com/users/lcnr/received_events",
        "repos_url": "https://api.github.com/users/lcnr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lcnr"
      }
    }
  ]
}
