# if `GITHUB_API_TOKEN` is not set here, the token can also be stored in `~/.gitconfig`
GITHUB_API_TOKEN=MUST_BE_CONFIGURED
DATABASE_URL=MUST_BE_CONFIGURED
GITHUB_WEBHOOK_SECRET=MUST_BE_CONFIGURED
# for logging, refer to this document: https://rust-lang-nursery.github.io/rust-cookbook/development_tools/debugging/config_log.html
# `RUSTC_LOG` is not required to run the application, but it makes local development easier
# RUST_LOG=MUST_BE_CONFIGURED

# Your local triagebot will be reachable from the internet using this URL
# This is useful if you configure a webhook from GitHub and want to use your local triagebot as receiving end of the GitHub webhooks.
TRIAGEBOT_HOST=http://7e9ea9dc.ngrok-free.app

# These are identifiers about your Github App for the pull request prefs backoffice (see pr_prefs_backoffice.md). Needed only if
#  want to hack locally on the backoffice.
# CLIENT_ID is public
# CLIENT_SECRET must be kept, well, secret.
CLIENT_ID="xxx"
CLIENT_SECRET="yyy"

# Flag to enable the new pull request assignment workflow (see pr_prefs_backoffice.md).
# If this env var is UNSET, the old pull request assignment is used (basically random assignment).
# If this env var is SET, the new pull request assignment reads the Rust contributors preferences and assigns PRs accordingly.
USE_NEW_PR_ASSIGNMENT=yay

# A comma separated list of teams that are allowed to use the new PR assignment workflow.
# Used to limit the number of users during the test phase.
# Team name matches names in the rust-lang/team repository:
# https://github.com/rust-lang/team/tree/master/teams
NEW_PR_ASSIGNMENT_TEAMS=compiler,compiler-contributors

# This is a secret used to create a checksum of the login cookie when accessing
# the pull request preferences backoffice. Only the server knows this secret.
# Could be generated with something like: openssl rand -hex 20
BACKOFFICE_SECRET=xxx
